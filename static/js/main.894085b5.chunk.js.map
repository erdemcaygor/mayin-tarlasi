{"version":3,"sources":["redux/constants.js","utils/helpers.js","redux/reducers/gameReducer.js","components/Cell/index.js","components/Container/index.js","components/Button/index.js","containers/home/CellContainer.js","redux/actions/gameActions.js","containers/home/ActionMenu.js","containers/home/index.js","App.js","reportWebVitals.js","redux/reducers/index.js","store.js","index.js"],"names":["actionTypes","START_GAME","UPDATE_USER_POINT","GAME_FINISHED","PLAY_AGAIN","generateCellValues","availableValues","value","usedTime","resultObj","i","j","randomIndexValue","Math","floor","random","length","show","initialState","cellValues","point","gameFinished","gameReducer","state","action","payload","type","index","CellContainer","styled","div","props","borderLeft","borderRight","borderTop","borderBottom","getMapColor","showValue","mapColor","0","1","2","3","finished","CellComponent","onCellClick","onClick","src","width","alt","defaultProps","Cell","React","memo","Container","flexDirection","alignItems","justifyContent","grow","padding","propTypes","PropTypes","string","Button","button","primary","ButtonWrapper","dispatch","useDispatch","useSelector","useEffect","onHandleClick","useCallback","cellIndex","cellValue","updateUserPoint","renderRow","columnIndex","rows","Array","keys","map","item","push","cellCount","columns","renderColumn","ScoreContainer","ActionMenu","MainContainer","Content","span","Home","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","combineReducers","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","ReactDOM","render","store","createStore","rootReducer","document","getElementById"],"mappings":"2PAOeA,EAPK,CAClBC,WAAY,aACZC,kBAAmB,oBACnBC,cAAe,gBACfC,WAAY,cCJDC,EAAqB,WAShC,IATmE,IAC/DC,EAAkB,CACpB,CAAEC,MAAO,EAAGC,SAAU,GACtB,CAAED,MAAO,EAAGC,SAAU,GACtB,CAAED,MAAO,EAAGC,SAAU,GACtB,CAAED,MAAO,EAAGC,SAAU,IAElBC,EAAY,GAETC,EAAI,EAAGA,EAAI,GAAIA,IACtB,IAAK,IAAIC,EAAI,EAAGA,EAAI,GAAIA,IAAK,CAAC,IAAD,IACrBC,EACJN,EAAgBO,KAAKC,MAAMD,KAAKE,SAAWT,EAAgBU,SAC7DP,EAAU,GAAD,OAAIC,GAAJ,OAAQC,IAAO,CAAEJ,MAAK,OAAEK,QAAF,IAAEA,OAAF,EAAEA,EAAkBL,MAAOU,MAAM,GAEhEX,EAAe,OAACM,QAAD,IAACA,OAAD,EAACA,EAAkBL,OAAlC,2BACKD,EAAe,OAACM,QAAD,IAACA,OAAD,EAACA,EAAkBL,QADvC,IAEEC,UAAU,UAAAF,EAAe,OAACM,QAAD,IAACA,OAAD,EAACA,EAAkBL,cAAlC,eAA0CC,UAAW,IAE7D,UAAAF,EAAe,OAACM,QAAD,IAACA,OAAD,EAACA,EAAkBL,cAAlC,SAA0CC,SAKlD,OAAOC,GCrBHS,EAAe,CACnBC,WAAY,GACZC,MAAO,EACPC,cAAc,GA2CDC,EAxCK,WAAmC,IAAlCC,EAAiC,uDAAzBL,EAAcM,EAAW,uCAC5CC,EAAkBD,EAAlBC,QAASC,EAASF,EAATE,KACjB,OAAQA,GACN,KAAK1B,EAAYC,WACf,OAAO,2BACFsB,GADL,IAEEJ,WAAYd,MAEhB,KAAKL,EAAYE,kBACf,OAAO,2BACFqB,GADL,IAEEH,MAAOG,EAAMH,MAAQK,EAAQL,MAC7BD,WAAW,2BACNI,EAAMJ,YADD,kBAEPM,EAAQE,MAFD,2BAEcJ,EAAMJ,WAAWM,EAAQE,QAFvC,IAE+CV,MAAM,QAGnE,KAAKjB,EAAYG,cAEf,OAAO,2BACFoB,GADL,IAEEF,cAAc,EACdF,WAAW,2BACNI,EAAMJ,YADD,kBAEPM,EAAQE,MAFD,2BAEcJ,EAAMJ,WAAWM,EAAQE,QAFvC,IAE+CV,MAAM,QAGnE,KAAKjB,EAAYI,WAEf,OAAO,2BACFmB,GADL,IAEEF,cAAc,EACdF,WAAYd,IACZe,MAAO,IAEX,QACE,OAAOG,I,4SCxCb,IAAMK,EAAgBC,IAAOC,IAAV,KAGF,SAACC,GAAD,OAAWA,EAAMC,cAChB,SAACD,GAAD,OAAWA,EAAME,eACnB,SAACF,GAAD,OAAWA,EAAMG,aACd,SAACH,GAAD,OAAWA,EAAMI,gBAKpB,SAACJ,GAAD,OACZK,EAAYL,EAAMxB,MAAOwB,EAAMM,UAAWN,EAAMV,iBAG9CiB,EAAW,CACfC,EAAG,UACHC,EAAG,UACHC,EAAG,UACHC,EAAG,UACHC,SAAU,WAGNP,EAAc,SAAC7B,EAAO8B,EAAWhB,GACrC,GAAa,MAATd,EAAe,CACjB,GAAI8B,EACF,OAAOC,EAAS/B,GACX,GAAIc,EACT,OAAiB,IAAVd,EAAc+B,EAAS/B,GAAS+B,EAASK,SAGpD,MAAO,IAGHC,EAAgB,SAACb,GAAW,IAE9BxB,EASEwB,EATFxB,MACAsC,EAQEd,EARFc,YACAlB,EAOEI,EAPFJ,MACAK,EAMED,EANFC,WACAC,EAKEF,EALFE,YACAC,EAIEH,EAJFG,UACAC,EAGEJ,EAHFI,aACAE,EAEEN,EAFFM,UACAhB,EACEU,EADFV,aAWF,OACE,cAAC,EAAD,CACEW,WAAYA,EACZC,YAAaA,EACbC,UAAWA,EACXC,aAAcA,EACd5B,MAAOA,EACP8B,UAAWA,EACXhB,aAAcA,EACdyB,QAAS,WACHzB,GACJwB,EAAYlB,EAAOpB,IAVvB,SATI8B,GAAahB,EACD,IAAVd,EACK,qBAAKwC,IAAI,WAAWC,MAAM,KAAKC,IAAI,SAErC1C,EAEF,MAgCXqC,EAAcM,aAAe,CAC3BL,YAAa,aACbR,WAAW,GAGb,IAAMc,EAAOC,IAAMC,KAAKT,G,0PC1FxB,IAAMU,EAAYzB,IAAOC,IAAV,KAEK,SAACC,GAAD,OAAWA,EAAMwB,iBACpB,SAACxB,GAAD,OAAWA,EAAMyB,cACb,SAACzB,GAAD,OAAWA,EAAM0B,kBAC5B,SAAC1B,GAAD,OAAWA,EAAM2B,QACd,SAAC3B,GAAD,OAAWA,EAAM4B,WACX,SAAC5B,GAAD,OAAWA,EAAMI,gBACpB,SAACJ,GAAD,OAAWA,EAAMG,a,qVAGjCoB,EAAUM,UAAY,CACpBL,cAAeM,IAAUC,QAG3BR,EAAUJ,aAAe,CACvBK,cAAe,OClBjB,IAAMQ,EAASlC,IAAOmC,OAAV,KACD,SAACjC,GAAD,OAAYA,EAAMkC,QAAU,QAAU,aAQ3CC,EAAgBrC,IAAOC,IAAV,IACPiC,G,eC6CGnC,EAhDO,SAACG,GACrB,IAAMoC,EAAWC,cACX9C,EAAc+C,aAAY,SAAC9C,GAAD,OAAWA,EAAMD,eAGjDgD,qBAAU,WACRH,ECbK,CACLzC,KAAM1B,EAAYC,eDajB,IAEH,IAAMsE,EAAgBC,uBAAY,SAACC,EAAWC,GAE1CP,EADgB,IAAdO,ECJC,CACLhD,KAAM1B,EAAYG,cAClBsB,QAAS,CAAEL,MDGwBsD,ECHjB/C,MDGM8C,ICbG,SAAC9C,EAAOP,GACrC,MAAO,CACLM,KAAM1B,EAAYE,kBAClBuB,QAAS,CAAEL,QAAOO,UDYPgD,CAAgBF,EAAWC,OAIlCE,EAAY,SAACC,GACjB,IAAMC,EAAO,GAgBb,OAfA,YAAIC,MAhBY,IAgBKC,QAAQC,KAAI,SAACC,EAAMxE,GAAO,IAAD,IAC5CoE,EAAKK,KACH,cAAChC,EAAD,CAEE5C,MAAK,OAAEe,QAAF,IAAEA,GAAF,UAAEA,EAAaH,WAAb,UAA2B0D,GAA3B,OAAyCnE,WAA3C,aAAE,EAA+CH,MACtD8B,UAAS,OAAEf,QAAF,IAAEA,GAAF,UAAEA,EAAaH,WAAb,UAA2B0D,GAA3B,OAAyCnE,WAA3C,aAAE,EAA+CO,KAC1DI,aAAY,OAAEC,QAAF,IAAEA,OAAF,EAAEA,EAAaD,aAC3BW,WAAY,kBACZE,UAAW,kBACXD,YAAmBmD,IAAN1E,EAAsB,kBAAoB,GACvDyB,aAA8BiD,IAAhBP,EAAgC,kBAAoB,GAClElD,MAAK,UAAKkD,GAAL,OAAmBnE,GACxBmC,YAAa0B,GAVf,UACUM,GADV,OACwBnE,QAYrBoE,GAWT,OAAO,cAACxB,EAAD,CAAWC,cAAc,SAAzB,SARc,WACnB,IAAM8B,EAAU,GAIhB,OAHA,YAAIN,MApCY,IAoCKC,QAAQC,KAAI,SAACC,EAAMxE,GACtC2E,EAAQF,KAAK,cAAC7B,EAAD,UAAoBsB,EAAUlE,IAAdA,OAExB2E,EAGiCC,M,oHEhD5C,IAAMC,EAAiB1D,IAAOC,IAAV,KA4BL0D,EAvBI,SAACzD,GAClB,IAAMT,EAAc+C,aAAY,SAAC9C,GAAD,OAAWA,EAAMD,eAC3C6C,EAAWC,cACjB,OACE,eAACd,EAAD,CACEG,eAAe,gBACfC,KAAM,EACNC,QAAQ,UACRxB,aAAa,kBAJf,UAKE,cAACmB,EAAD,CAAWE,WAAW,SAAtB,UACc,OAAXlC,QAAW,IAAXA,OAAA,EAAAA,EAAaD,eACZ,cAAC6C,EAAD,UACE,cAACH,EAAD,CAAQjB,QAAS,kBAAMqB,EDD1B,CACLzC,KAAM1B,EAAYI,cCAV,oCAIN,cAACkD,EAAD,CAAWE,WAAW,SAAtB,SACE,eAAC+B,EAAD,sBAAmC,OAAXjE,QAAW,IAAXA,OAAA,EAAAA,EAAaF,QAAS,W,gOCvBtD,IAAMqE,EAAgB5D,IAAOC,IAAV,KAKb4D,EAAU7D,IAAOC,IAAV,KACI,SAACC,GAAD,OAAWA,EAAM4D,QAoBnBC,EAjBF,WACX,OACE,eAACH,EAAD,WACE,cAACC,EAAD,CAASC,KAAK,WACd,cAACD,EAAD,CAASC,KAAK,SAAd,SACE,eAACrC,EAAD,CAAWC,cAAc,SAAzB,UACE,cAAC,EAAD,IACA,cAACD,EAAD,CAAWG,eAAe,SAASE,QAAQ,MAA3C,SACE,cAAC,EAAD,WAIN,cAAC+B,EAAD,CAASC,KAAK,eChBLE,MARf,WACE,OACE,mCACE,cAAC,EAAD,OCMSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,eCLCQ,cAAgB,CAC7BjF,gBCQIkF,GANc,kBAAXC,QAAuBA,OAAOC,qCACjCD,OAAOC,qCAAqC,IAG5CC,KAE4BC,YAAgBC,MCHlDC,IAASC,OACP,cAAC,IAAD,CAAUC,MDKHC,YAAYC,EAAaV,GCLhC,SACE,cAAC,EAAD,MAEFW,SAASC,eAAe,SAM1BtB,M","file":"static/js/main.894085b5.chunk.js","sourcesContent":["const actionTypes = {\n  START_GAME: \"START_GAME\",\n  UPDATE_USER_POINT: \"UPDATE_USER_POINT\",\n  GAME_FINISHED: \"GAME_FINISHED\",\n  PLAY_AGAIN: \"PLAY_AGAIN\",\n};\n\nexport default actionTypes;\n","export const generateCellValues = (rowCount = 10, colCount = 10) => {\n  let availableValues = [\n    { value: 0, usedTime: 0 },\n    { value: 1, usedTime: 0 },\n    { value: 2, usedTime: 0 },\n    { value: 3, usedTime: 0 },\n  ];\n  const resultObj = {};\n\n  for (let i = 0; i < 10; i++) {\n    for (let j = 0; j < 10; j++) {\n      const randomIndexValue =\n        availableValues[Math.floor(Math.random() * availableValues.length)];\n      resultObj[`${i}${j}`] = { value: randomIndexValue?.value, show: false };\n\n      availableValues[randomIndexValue?.value] = {\n        ...availableValues[randomIndexValue?.value],\n        usedTime: availableValues[randomIndexValue?.value]?.usedTime + 1,\n      };\n      if (availableValues[randomIndexValue?.value]?.usedTime >= 25) {\n        // availableValues.splice(randomIndexValue, 1);\n      }\n    }\n  }\n  return resultObj;\n};\n","import actionTypes from \"../constants\";\nimport { generateCellValues } from \"../../utils/helpers\";\n\nconst initialState = {\n  cellValues: {},\n  point: 0,\n  gameFinished: false,\n};\n\nconst gameReducer = (state = initialState, action) => {\n  const { payload, type } = action;\n  switch (type) {\n    case actionTypes.START_GAME:\n      return {\n        ...state,\n        cellValues: generateCellValues(),\n      };\n    case actionTypes.UPDATE_USER_POINT:\n      return {\n        ...state,\n        point: state.point + payload.point,\n        cellValues: {\n          ...state.cellValues,\n          [payload.index]: { ...state.cellValues[payload.index], show: true },\n        },\n      };\n    case actionTypes.GAME_FINISHED:\n      debugger;\n      return {\n        ...state,\n        gameFinished: true,\n        cellValues: {\n          ...state.cellValues,\n          [payload.index]: { ...state.cellValues[payload.index], show: true },\n        },\n      };\n    case actionTypes.PLAY_AGAIN:\n      debugger;\n      return {\n        ...state,\n        gameFinished: false,\n        cellValues: generateCellValues(),\n        point: 0,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default gameReducer;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport gameReducer from \"../../redux/reducers/gameReducer\";\n\nconst CellContainer = styled.div`\n  width: 50px;\n  height: 50px;\n  border-left: ${(props) => props.borderLeft};\n  border-right: ${(props) => props.borderRight};\n  border-top: ${(props) => props.borderTop};\n  border-bottom: ${(props) => props.borderBottom};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  background: ${(props) =>\n    getMapColor(props.value, props.showValue, props.gameFinished)};\n`;\n\nconst mapColor = {\n  0: \"#d9534f\",\n  1: \"#5bc0de\",\n  2: \"#0275d8\",\n  3: \"#5cb85c\",\n  finished: \"#f7f7f7\",\n};\n\nconst getMapColor = (value, showValue, gameFinished) => {\n  if (value != null) {\n    if (showValue) {\n      return mapColor[value];\n    } else if (gameFinished) {\n      return value === 0 ? mapColor[value] : mapColor.finished;\n    }\n  }\n  return \"\";\n};\n\nconst CellComponent = (props) => {\n  const {\n    value,\n    onCellClick,\n    index,\n    borderLeft,\n    borderRight,\n    borderTop,\n    borderBottom,\n    showValue,\n    gameFinished,\n  } = props;\n  const getValue = () => {\n    if (showValue || gameFinished) {\n      if (value === 0) {\n        return <img src=\"bomb.png\" width=\"20\" alt=\"bomb\" />;\n      }\n      return value;\n    }\n    return \"\";\n  };\n  return (\n    <CellContainer\n      borderLeft={borderLeft}\n      borderRight={borderRight}\n      borderTop={borderTop}\n      borderBottom={borderBottom}\n      value={value}\n      showValue={showValue}\n      gameFinished={gameFinished}\n      onClick={() => {\n        if (gameFinished) return;\n        onCellClick(index, value);\n      }}>\n      {getValue()}\n    </CellContainer>\n  );\n};\n\nCellComponent.propTypes = {\n  borderLeft: PropTypes.string,\n  borderRight: PropTypes.string,\n  borderTop: PropTypes.string,\n  borderBottom: PropTypes.string,\n  value: PropTypes.number,\n  onCellClick: PropTypes.func,\n  index: PropTypes.string,\n  showValue: PropTypes.bool,\n  gameFinished: PropTypes.bool,\n};\n\nCellComponent.defaultProps = {\n  onCellClick: () => {},\n  showValue: false,\n};\n\nconst Cell = React.memo(CellComponent);\n\nexport { Cell };\n","import React from \"react\";\n\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: ${(props) => props.flexDirection};\n  align-items: ${(props) => props.alignItems};\n  justify-content: ${(props) => props.justifyContent};\n  flex: ${(props) => props.grow};\n  padding: ${(props) => props.padding};\n  border-bottom: ${(props) => props.borderBottom};\n  border-top: ${(props) => props.borderTop};\n`;\n\nContainer.propTypes = {\n  flexDirection: PropTypes.string,\n};\n\nContainer.defaultProps = {\n  flexDirection: \"row\",\n};\n\nexport { Container };\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Button = styled.button`\n  color: ${(props) => (props.primary ? \"white\" : \"#9ccc9c\")};\n  font-size: 1em;\n  padding: 0.25em 1em;\n  border: 2px solid #9ccc9c;\n  border-radius: 3px;\n  curspor: pointer;\n`;\n\nconst ButtonWrapper = styled.div`\n  &:hover ${Button} {\n    color: white;\n    background: #9ccc9c;\n  }\n`;\n\nexport { Button, ButtonWrapper };\n","import React, { useEffect, useCallback } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { Cell, Container } from \"../../components\";\nimport {\n  updateUserPoint,\n  startGame,\n  gameFinished,\n} from \"../../redux/actions/gameActions\";\n\nconst CellContainer = (props) => {\n  const dispatch = useDispatch();\n  const gameReducer = useSelector((state) => state.gameReducer);\n  const cellCount = 10;\n\n  useEffect(() => {\n    dispatch(startGame());\n  }, []);\n\n  const onHandleClick = useCallback((cellIndex, cellValue) => {\n    if (cellValue === 0) {\n      dispatch(gameFinished(cellIndex, cellValue));\n    } else {\n      dispatch(updateUserPoint(cellIndex, cellValue));\n    }\n  });\n\n  const renderRow = (columnIndex) => {\n    const rows = [];\n    [...Array(cellCount).keys()].map((item, i) => {\n      rows.push(\n        <Cell\n          key={`${columnIndex}${i}`}\n          value={gameReducer?.cellValues[`${columnIndex}${i}`]?.value}\n          showValue={gameReducer?.cellValues[`${columnIndex}${i}`]?.show}\n          gameFinished={gameReducer?.gameFinished}\n          borderLeft={\"solid 2px black\"}\n          borderTop={\"solid 2px black\"}\n          borderRight={i === cellCount - 1 ? \"solid 2px black\" : \"\"}\n          borderBottom={columnIndex === cellCount - 1 ? \"solid 2px black\" : \"\"}\n          index={`${columnIndex}${i}`}\n          onCellClick={onHandleClick}></Cell>\n      );\n    });\n    return rows;\n  };\n\n  const renderColumn = () => {\n    const columns = [];\n    [...Array(cellCount).keys()].map((item, i) => {\n      columns.push(<Container key={i}>{renderRow(i)}</Container>);\n    });\n    return columns;\n  };\n\n  return <Container flexDirection=\"column\">{renderColumn()}</Container>;\n};\n\nexport default CellContainer;\n","import actionTypes from \"../constants\";\n\nexport const startGame = () => {\n  return {\n    type: actionTypes.START_GAME,\n  };\n};\n\nexport const updateUserPoint = (index, point) => {\n  return {\n    type: actionTypes.UPDATE_USER_POINT,\n    payload: { point, index },\n  };\n};\n\nexport const gameFinished = (index, point) => {\n  return {\n    type: actionTypes.GAME_FINISHED,\n    payload: { point, index },\n  };\n};\n\nexport const playAgain = () => {\n  return {\n    type: actionTypes.PLAY_AGAIN,\n  };\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { Container, Button, ButtonWrapper } from \"../../components\";\nimport { playAgain } from \"../../redux/actions/gameActions\";\n\nconst ScoreContainer = styled.div`\n  padding: 5px;\n  border: solid 2px black;\n`;\n\nconst ActionMenu = (props) => {\n  const gameReducer = useSelector((state) => state.gameReducer);\n  const dispatch = useDispatch();\n  return (\n    <Container\n      justifyContent=\"space-between\"\n      grow={1}\n      padding=\"2em 2em\"\n      borderBottom=\"solid 1px black\">\n      <Container alignItems=\"center\">\n        {gameReducer?.gameFinished && (\n          <ButtonWrapper>\n            <Button onClick={() => dispatch(playAgain())}>Yeniden Başla</Button>\n          </ButtonWrapper>\n        )}\n      </Container>\n      <Container alignItems=\"center\">\n        <ScoreContainer>Score: {gameReducer?.point || 0}</ScoreContainer>\n      </Container>\n    </Container>\n  );\n};\n\nexport default ActionMenu;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Container } from \"../../components\";\nimport CellContainer from \"./CellContainer\";\nimport ActionMenu from \"./ActionMenu\";\n\nconst MainContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(12, 1fr);\n`;\n\nconst Content = styled.div`\n  grid-column: ${(props) => props.span};\n`;\n\nconst Home = () => {\n  return (\n    <MainContainer>\n      <Content span=\"span 2\" />\n      <Content span=\"span 8\">\n        <Container flexDirection=\"column\">\n          <ActionMenu></ActionMenu>\n          <Container justifyContent=\"center\" padding=\"2em\">\n            <CellContainer></CellContainer>\n          </Container>\n        </Container>\n      </Content>\n      <Content span=\"span 2\" />\n    </MainContainer>\n  );\n};\n\nexport default Home;\n","import \"./App.css\";\nimport Home from \"./containers/home\";\n\nfunction App() {\n  return (\n    <>\n      <Home />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from \"redux\";\nimport gameReducer from \"./gameReducer\";\nexport default combineReducers({\n  gameReducer,\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./redux/reducers\";\n\nconst composeEnhancers =\n  typeof window === \"object\" && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n        // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\n      })\n    : compose;\n\nconst enhancer = composeEnhancers(applyMiddleware(thunk));\n\nexport default function configureStore() {\n  return createStore(rootReducer, enhancer);\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport configureStore from \"./store\";\n\nReactDOM.render(\n  <Provider store={configureStore()}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}